{"version":3,"sources":["SignIn.js","index.js"],"names":["SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","poolData","UserPoolId","ClientId","setEmail","email","setState","setPassword","password","toggleView","state","signUp","_this$state","userPool","CognitoUserPool","attributeList","dataEmail","Name","Value","attributeEmail","CognitoUserAttribute","attributeName","push","err","result","alert","message","JSON","stringify","cognitoUser","user","console","log","getUsername","signIn","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","userData","Pool","CognitoUser","authenticateUser","onSuccess","accessToken","getAccessToken","getJwtToken","onFailure","classes","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","getCurrentUser","getSession","session","isValid","isSessionValid","_this2","_this$state2","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","Typography","variant","TextField","required","fullWidth","id","label","name","onChange","e","target","value","autoFocus","type","FormControlLabel","control","Checkbox","color","Button","onClick","Grid","container","item","Link","href","Component","App","SignIn_SignIn","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ef5f7c41.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport {\n  CognitoUserPool,\n  CognitoUserAttribute,\n  CognitoUser,\n  AuthenticationDetails\n} from \"amazon-cognito-identity-js\";\n\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      toggleView: false,\n      classes: makeStyles(theme => ({\n        \"@global\": {\n          body: {\n            backgroundColor: theme.palette.common.white\n          }\n        },\n        paper: {\n          marginTop: theme.spacing(8),\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        avatar: {\n          margin: theme.spacing(1),\n          backgroundColor: theme.palette.secondary.main\n        },\n        form: {\n          width: \"100%\", // Fix IE 11 issue.\n          marginTop: theme.spacing(1)\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2)\n        }\n      }))\n    };\n  }\n\n  poolData = {\n    UserPoolId: \"ap-south-1_FenySRVT7\", // Your user pool id here\n    ClientId: \"3dkoljtulnt2gm119v99lu0d3\" // Your client id here\n  };\n\n  isSessionValid() {\n    const userPool = new CognitoUserPool(this.poolData);\n    const cognitoUser = userPool.getCurrentUser();\n\n    if (cognitoUser != null) {\n      cognitoUser.getSession(function(err, session) {\n        if (err) {\n          alert(err.message || JSON.stringify(err));\n          return;\n        }\n        console.log(\"session validity: \" + session.isValid());\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.isSessionValid();\n  }\n  \n  setEmail = email => this.setState({ email });\n  setPassword = password => this.setState({ password });\n  toggleView = () =>\n    this.setState({\n      toggleView: !this.state.toggleView,\n      email: \"\",\n      password: \"\"\n    });\n\n  poolData = {\n    UserPoolId: \"ap-south-1_FenySRVT7\", // Your user pool id here\n    ClientId: \"3dkoljtulnt2gm119v99lu0d3\" // Your client id here\n  };\n\n  signUp = () => {\n    const { email, password } = this.state;\n    const userPool = new CognitoUserPool(this.poolData);\n\n    const attributeList = [];\n\n    const dataEmail = {\n      Name: \"email\",\n      Value: email\n    };\n    var dataName = {\n      Name: \"name\",\n      Value: \"karan\"\n    };\n\n    const attributeEmail = new CognitoUserAttribute(dataEmail);\n    const attributeName = new CognitoUserAttribute(dataName);\n\n    attributeList.push(attributeEmail);\n    attributeList.push(attributeName);\n\n    userPool.signUp(email, password, attributeList, null, function(\n      err,\n      result\n    ) {\n      if (err) {\n        alert(err.message || JSON.stringify(err));\n        return;\n      }\n      var cognitoUser = result.user;\n      console.log(\"user name is \" + cognitoUser.getUsername());\n    });\n  };\n\n  signIn = () => {\n    const authenticationData = {\n      Username: this.state.email,\n      Password: this.state.password\n    };\n    var authenticationDetails = new AuthenticationDetails(authenticationData);\n\n    const userPool = new CognitoUserPool(this.poolData);\n    const userData = {\n      Username: this.state.email,\n      Pool: userPool\n    };\n    const cognitoUser = new CognitoUser(userData);\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: result => {\n        var accessToken = result.getAccessToken().getJwtToken();\n        console.log(accessToken);\n        this.setState({ email: \"\", password: \"\" });\n        //POTENTIAL: Region needs to be set if not already set previously elsewhere.\n        // AWS.config.region = '<region>';\n\n        // AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n        //     IdentityPoolId : '...', // your identity pool id here\n        //     Logins : {\n        //         // Change the key below according to the specific region your user pool is in.\n        //         'cognito-idp.<region>.amazonaws.com/<YOUR_USER_POOL_ID>' : result.getIdToken().getJwtToken()\n        //     }\n        // });\n\n        // //refreshes credentials using AWS.CognitoIdentity.getCredentialsForIdentity()\n        // AWS.config.credentials.refresh((error) => {\n        //     if (error) {\n        //          console.error(error);\n        //     } else {\n        //          // Instantiate aws sdk service objects now that the credentials have been updated.\n        //          // example: var s3 = new AWS.S3();\n        //          console.log('Successfully logged!');\n        //     }\n        // });\n      },\n\n      onFailure: function(err) {\n        alert(err.message || JSON.stringify(err));\n      }\n    });\n  };\n  render() {\n    const { toggleView, email, password } = this.state;\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={this.state.classes.paper}>\n          <Avatar className={this.state.classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {toggleView ? \"Sign Up\" : \"Sign In\"}\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            onChange={e => this.setEmail(e.target.value)}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={e => this.setPassword(e.target.value)}\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n          />\n          {!toggleView && (\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n          )}\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={this.state.classes.submit}\n            onClick={() => (toggleView ? this.signUp() : this.signIn())}\n          >\n            {toggleView ? \"Sign Up\" : \"Sign In\"}\n          </Button>\n          <Grid container>\n            <Grid item>\n              {!toggleView && (\n                <Link\n                  href=\"#\"\n                  onClick={() => this.toggleView()}\n                  variant=\"body2\"\n                >\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport SignIn from './SignIn';\nimport './style.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'React'\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <SignIn name={this.state.name} />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}