{"ast":null,"code":"export const checkSessionIsActive = () => {\n  const isCookieAvailable = document.cookie.split(\";\").find(cookie => cookie.includes(\"accessToken\"));\n  console.log(\"sign active\", !document.cookie.split(\";\").find(cookie => cookie.includes(\"accessToken\")), window.location.pathname !== \"/\");\n\n  if (!isCookieAvailable && window.location.pathname !== \"/\") {\n    window.location.replace(window.location.origin);\n  }\n\n  return isCookieAvailable;\n};\nexport const getCookie = name => {\n  const cookies = document.cookie.split(\";\");\n  const cookieName = name + \"=\";\n  return cookies.find(cookie => cookie.includes(cookieName)).trim().split(\"=\")[1];\n};\nexport const removeCookies = () => {\n  const cookies = document.cookie.split(\";\");\n  cookies.forEach(cookie => {\n    const key = cookie.split(\"=\");\n    document.cookie = key[0] + \" =; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n  });\n};","map":{"version":3,"sources":["/Users/karanb/book-club/fellowship-book-keeper/src/util.js"],"names":["checkSessionIsActive","isCookieAvailable","document","cookie","split","find","includes","console","log","window","location","pathname","replace","origin","getCookie","name","cookies","cookieName","trim","removeCookies","forEach","key"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,MAAM;AACxC,QAAMC,iBAAiB,GAAGC,QAAQ,CAACC,MAAT,CACvBC,KADuB,CACjB,GADiB,EAEvBC,IAFuB,CAElBF,MAAM,IAAIA,MAAM,CAACG,QAAP,CAAgB,aAAhB,CAFQ,CAA1B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CACE,aADF,EAEE,CAACN,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,IAA3B,CAAgCF,MAAM,IAAIA,MAAM,CAACG,QAAP,CAAgB,aAAhB,CAA1C,CAFH,EAGEG,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,GAH/B;;AAKA,MAAI,CAACV,iBAAD,IAAsBQ,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,GAAvD,EAA4D;AAC1DF,IAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwBH,MAAM,CAACC,QAAP,CAAgBG,MAAxC;AACD;;AACD,SAAOZ,iBAAP;AACD,CAbM;AAeP,OAAO,MAAMa,SAAS,GAAGC,IAAI,IAAI;AAC/B,QAAMC,OAAO,GAAGd,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAhB;AACA,QAAMa,UAAU,GAAGF,IAAI,GAAG,GAA1B;AACA,SAAOC,OAAO,CAACX,IAAR,CAAaF,MAAM,IAAIA,MAAM,CAACG,QAAP,CAAgBW,UAAhB,CAAvB,EAAoDC,IAApD,GAA2Dd,KAA3D,CAAiE,GAAjE,EAAsE,CAAtE,CAAP;AACD,CAJM;AAMP,OAAO,MAAMe,aAAa,GAAG,MAAM;AACjC,QAAMH,OAAO,GAAGd,QAAQ,CAACC,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,CAAhB;AACAY,EAAAA,OAAO,CAACI,OAAR,CAAgBjB,MAAM,IAAI;AACxB,UAAMkB,GAAG,GAAGlB,MAAM,CAACC,KAAP,CAAa,GAAb,CAAZ;AACAF,IAAAA,QAAQ,CAACC,MAAT,GAAkBkB,GAAG,CAAC,CAAD,CAAH,GAAS,6CAA3B;AACD,GAHD;AAID,CANM","sourcesContent":["export const checkSessionIsActive = () => {\n  const isCookieAvailable = document.cookie\n    .split(\";\")\n    .find(cookie => cookie.includes(\"accessToken\"));\n  console.log(\n    \"sign active\",\n    !document.cookie.split(\";\").find(cookie => cookie.includes(\"accessToken\")),\n    window.location.pathname !== \"/\"\n  );\n  if (!isCookieAvailable && window.location.pathname !== \"/\") {\n    window.location.replace(window.location.origin);\n  }\n  return isCookieAvailable;\n};\n\nexport const getCookie = name => {\n  const cookies = document.cookie.split(\";\");\n  const cookieName = name + \"=\";\n  return cookies.find(cookie => cookie.includes(cookieName)).trim().split(\"=\")[1];\n};\n\nexport const removeCookies = () => {\n  const cookies = document.cookie.split(\";\");\n  cookies.forEach(cookie => {\n    const key = cookie.split(\"=\");\n    document.cookie = key[0] + \" =; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n  });\n};\n"]},"metadata":{},"sourceType":"module"}